{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAG3BC,YAAW,KAILN,EACFI,EAAQ,C,SAACN,E,MAASC,IAElBM,EAAO,C,SAACP,E,MAASC,GAAO,GAEzBA,EAAM,G,CAKAQ,SAASC,cAAc,SAK/BC,iBAAiB,UAEtB,SAAqBC,GACpBA,EAAEC,iBAEC,IAAMZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,OAAOC,SAEzCJ,EAASK,OAAOL,EAAMM,OACtBL,EAAOI,OAAOJ,EAAKK,OACnBJ,EAAUG,OAAOH,EAAOI,OACxB,IAAIC,EAAUP,EAEd,GAAIA,EAAQ,EAEV,YADAjB,EAAAyB,OAAOC,QAAQ,4CAEV,GAAGP,EAAS,EAEjB,YADAnB,EAAAyB,OAAOC,QAAQ,8CAIjB,IAAK,IAAIC,EAAQ,EAAGA,EAAQR,EAAO,EAAGQ,IACtCzB,EAAcyB,EAAOH,GACpBI,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAyB,OAAOI,QAAQ,uBAAqB1B,QAAiBC,MAAU,IAEhE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAyB,OAAOC,QAAQ,sBAAoBvB,QAAeC,MAAU,IAE5DoB,GAAWN,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    \n\n    setTimeout(() => {\n      // Change value of isSuccess variable to simulate request status\n      const isSuccess = true;\n\n      if (shouldResolve) {\n        resolve({position,delay});\n      } else {\n        reject({position,delay});\n      }\n    }, delay);\n  });\n};\n\n\nconst form = document.querySelector(\".form\");\n\n\n\n\nform.addEventListener(\"submit\", startCreate);\n\nfunction startCreate(e) {\n e.preventDefault();\n  \n    let { delay, step, amount } = e.target.elements;\n  \n  delay =  Number(delay.value);\n  step = Number(step.value);\n  amount =  Number(amount.value);\n  let counter = delay;\n  \n  if (delay < 0) {\n    Notify.failure(`The first delay cannot be less than zero`);\n    return;\n  } else if(amount < 1) {  \n    Notify.failure(`The Amount field must be greater than zero`);\n    return;\n  };\n  \n  for (let index = 1; index < amount+1; index++) {\n  createPromise(index, counter)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    counter += step;\n  }\n  \n\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","delay1","step","amount","target","elements","Number","value","counter","Notify","failure","index","then","success","catch"],"version":3,"file":"03-promises.384b5766.js.map"}